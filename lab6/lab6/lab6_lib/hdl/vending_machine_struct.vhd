-- VHDL Entity lab6_lib.vending_machine.symbol
--
-- Created:
--          by - mrn2.ews (eceb-2022-20.ews.illinois.edu)
--          at - 18:39:18 10/17/16
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

ENTITY vending_machine IS
   PORT( 
      T   : IN     std_logic;
      clk : IN     std_logic;
      rst : IN     std_logic;
      set : IN     std_logic;
      A   : OUT    std_logic;
      P   : OUT    std_logic
   );

-- Declarations

END vending_machine ;

--
-- VHDL Architecture lab6_lib.vending_machine.struct
--
-- Created:
--          by - mrn2.ews (eceb-2022-20.ews.illinois.edu)
--          at - 18:39:18 10/17/16
--
-- Generated by Mentor Graphics' HDL Designer(TM) 2012.1 (Build 6)
--
LIBRARY ieee;
USE ieee.std_logic_1164.all;
USE ieee.std_logic_arith.all;

LIBRARY lab6_lib;

ARCHITECTURE struct OF vending_machine IS

   -- Architecture declarations

   -- Internal signal declarations
   SIGNAL S0     : std_logic;
   SIGNAL S0plus : std_logic;
   SIGNAL S1     : std_logic;
   SIGNAL S1plus : std_logic;
   SIGNAL S2     : std_logic;
   SIGNAL S2plus : std_logic;
   SIGNAL dout   : std_logic;


   -- ModuleWare signal declarations(v1.9) for instance 'U_0' of 'adff'
   SIGNAL mw_U_0reg_cval : std_logic;

   -- ModuleWare signal declarations(v1.9) for instance 'U_1' of 'adff'
   SIGNAL mw_U_1reg_cval : std_logic;

   -- ModuleWare signal declarations(v1.9) for instance 'U_2' of 'adff'
   SIGNAL mw_U_2reg_cval : std_logic;

   -- Component Declarations
   COMPONENT next_state_logic
   PORT (
      S0     : IN     std_logic ;
      S1     : IN     std_logic ;
      S2     : IN     std_logic ;
      T      : IN     std_logic ;
      S0plus : OUT    std_logic ;
      S1plus : OUT    std_logic ;
      S2plus : OUT    std_logic 
   );
   END COMPONENT;
   COMPONENT vm_circuit
   PORT (
      S0 : IN     std_logic ;
      S1 : IN     std_logic ;
      S2 : IN     std_logic ;
      A  : OUT    std_logic ;
      P  : OUT    std_logic 
   );
   END COMPONENT;

   -- Optional embedded configurations
   -- pragma synthesis_off
   FOR ALL : next_state_logic USE ENTITY lab6_lib.next_state_logic;
   FOR ALL : vm_circuit USE ENTITY lab6_lib.vm_circuit;
   -- pragma synthesis_on


BEGIN

   -- ModuleWare code(v1.9) for instance 'U_0' of 'adff'
   S2 <= mw_U_0reg_cval;
   u_0seq_proc: PROCESS (clk, rst, set)
   BEGIN
      IF (rst = '1') THEN
         mw_U_0reg_cval <= '0';
      ELSIF (set = '1') THEN
         mw_U_0reg_cval <= '1';
      ELSIF (clk'EVENT AND clk='1') THEN
         IF (dout = '1') THEN
            mw_U_0reg_cval <= S2plus;
         END IF;
      END IF;
   END PROCESS u_0seq_proc;

   -- ModuleWare code(v1.9) for instance 'U_1' of 'adff'
   S1 <= mw_U_1reg_cval;
   u_1seq_proc: PROCESS (clk, rst, set)
   BEGIN
      IF (rst = '1') THEN
         mw_U_1reg_cval <= '0';
      ELSIF (set = '1') THEN
         mw_U_1reg_cval <= '1';
      ELSIF (clk'EVENT AND clk='1') THEN
         IF (dout = '1') THEN
            mw_U_1reg_cval <= S1plus;
         END IF;
      END IF;
   END PROCESS u_1seq_proc;

   -- ModuleWare code(v1.9) for instance 'U_2' of 'adff'
   S0 <= mw_U_2reg_cval;
   u_2seq_proc: PROCESS (clk, rst, set)
   BEGIN
      IF (rst = '1') THEN
         mw_U_2reg_cval <= '0';
      ELSIF (set = '1') THEN
         mw_U_2reg_cval <= '1';
      ELSIF (clk'EVENT AND clk='1') THEN
         IF (dout = '1') THEN
            mw_U_2reg_cval <= S0plus;
         END IF;
      END IF;
   END PROCESS u_2seq_proc;

   -- ModuleWare code(v1.9) for instance 'U_4' of 'vdd'
   dout <= '1';

   -- Instance port mappings.
   U_3 : next_state_logic
      PORT MAP (
         S0     => S0,
         S1     => S1,
         S2     => S2,
         T      => T,
         S0plus => S0plus,
         S1plus => S1plus,
         S2plus => S2plus
      );
   U_5 : vm_circuit
      PORT MAP (
         S0 => S0,
         S1 => S1,
         S2 => S2,
         A  => A,
         P  => P
      );

END struct;
